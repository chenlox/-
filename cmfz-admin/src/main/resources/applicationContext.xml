<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--
       shiro的过滤器工厂对象  负责权限的校验 处理请求的bean
   -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"></property>
        <!--登录页的url地址-->
        <property name="loginUrl" value="/login.jsp"></property>
        <property name="unauthorizedUrl" value="/error.jsp"></property>
        <!--
            定义过滤器链的拦截规则
            过滤器：filter  请求和响应做预处理的
            Filter 接口 3个 doFilter(req,resp,chain)
                           chain.doFilter(req,resp);
        -->
        <property name="filterChainDefinitions">
            <!--
                 /main.jsp=anon
                 url=过滤器简称
                 过滤器：anon | authc | user | logout | roles | perms
            -->
            <value>
                /manager/login.do=anon
                /manager/register.do=anon
                /manager/getCookie.do=anon
                /getImage/getCode.do=anon
                /css/**=anon
                /js/**=anon
                /themes/**=anon
                /img/**=anon
                /script/**=anon
                /main.jsp=user
                /login.jsp=anon
                /register.jsp=anon
                /**=authc
            </value>
        </property>
    </bean>

    <!-- 初始化web环境下的安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="myRealm"></ref>
            </list>
        </property>
        <!-- 记住我管理器 实现记住我功能 -->
        <property name="rememberMeManager" ref="rememberMeManager"></property>
    </bean>

    <!--声明记住我管理器-->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="simpleCookie"></property>
    </bean>

    <!--对记住我的cookie配置-->
    <bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!--cookie名称-->
        <property name="name" value="rm"></property>
        <property name="maxAge" value="604800"></property>
        <property name="path" value="/"></property>
    </bean>

    <bean id="myRealm" class="com.baizhi.cmfz.util.MyRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"></property>
    </bean>

    <!--声明复杂的凭证匹配器对象-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"></property>
        <property name="hashIterations" value="1024"></property>
    </bean>





    <!--ssm自身的配置-->
    <context:component-scan base-package="com.baizhi.cmfz">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>

    <!--引入局部配置文件-->
    <context:property-placeholder location="classpath:/jdbc.properties"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property value="${driver}" name="driverClassName"/>
        <property value="${url}" name="url"/>
        <property value="${name}" name="username"/>
        <property value="${password}" name="password"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.baizhi.cmfz.entity" />
        <property name="mapperLocations" value="classpath:com/baizhi/cmfz/mappers/*Mapper.xml" />
    </bean>

    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.baizhi.cmfz.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />


    <bean id="myAdvice" class="com.baizhi.cmfz.Aspect.MyAdvice"></bean>

    <!--使用aspectj 风格的-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

</beans>